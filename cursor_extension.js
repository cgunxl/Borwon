// Cursor Extension ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Advanced Cursor AI System
// ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Cursor ‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö AI

const vscode = require('vscode');
const fs = require('fs');
const path = require('path');

/**
 * ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Extension
 */
function activate(context) {
    console.log('üöÄ Advanced Cursor AI Extension is now active!');
    
    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ
    let createCommand = vscode.commands.registerCommand('advanced-cursor-ai.create', async function () {
        const prompt = await vscode.window.showInputBox({
            prompt: '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á',
            placeHolder: '‡πÄ‡∏ä‡πà‡∏ô: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß, ‡∏™‡∏£‡πâ‡∏≤‡∏á API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
        });
        
        if (prompt) {
            await sendCommandToAI(prompt, 'create');
            vscode.window.showInformationMessage(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ${prompt}`);
        }
    });
    
    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    let confirmCommand = vscode.commands.registerCommand('advanced-cursor-ai.confirm', async function () {
        await sendCommandToAI('', 'confirm');
        vscode.window.showInformationMessage('‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£ Deploy ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ');
    });
    
    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    let editCommand = vscode.commands.registerCommand('advanced-cursor-ai.edit', async function () {
        const editDetails = await vscode.window.showInputBox({
            prompt: '‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç',
            placeHolder: '‡πÄ‡∏ä‡πà‡∏ô: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô, ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤'
        });
        
        if (editDetails) {
            await sendCommandToAI('', 'edit', editDetails);
            vscode.window.showInformationMessage(`‚úèÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ${editDetails}`);
        }
    });
    
    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
    let cancelCommand = vscode.commands.registerCommand('advanced-cursor-ai.cancel', async function () {
        await sendCommandToAI('', 'cancel');
        vscode.window.showInformationMessage('üö´ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
    });
    
    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    let statsCommand = vscode.commands.registerCommand('advanced-cursor-ai.stats', async function () {
        const statsPanel = vscode.window.createWebviewPanel(
            'advancedCursorAIStats',
            'Advanced Cursor AI - ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥',
            vscode.ViewColumn.One,
            {
                enableScripts: true
            }
        );
        
        statsPanel.webview.html = getStatsWebviewContent();
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô context
    context.subscriptions.push(createCommand);
    context.subscriptions.push(confirmCommand);
    context.subscriptions.push(editCommand);
    context.subscriptions.push(cancelCommand);
    context.subscriptions.push(statsCommand);
    
    // ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå response
    const workspaceFolder = vscode.workspace.workspaceFolders?.[0];
    if (workspaceFolder) {
        const responseFile = path.join(workspaceFolder.uri.fsPath, '.cursor_responses.json');
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå response ‡∏ó‡∏∏‡∏Å 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        setInterval(() => {
            checkResponseFile(responseFile);
        }, 2000);
    }
}

/**
 * ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡∏∞‡∏ö‡∏ö AI
 */
async function sendCommandToAI(prompt, action, editDetails = '') {
    const workspaceFolder = vscode.workspace.workspaceFolders?.[0];
    if (!workspaceFolder) {
        vscode.window.showErrorMessage('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö workspace folder');
        return;
    }
    
    const commandFile = path.join(workspaceFolder.uri.fsPath, '.cursor_commands.json');
    
    const commandData = {
        prompt: prompt,
        action: action,
        edit_details: editDetails,
        timestamp: new Date().toISOString()
    };
    
    try {
        fs.writeFileSync(commandFile, JSON.stringify(commandData, null, 2), 'utf8');
        console.log(`üì§ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: ${action} - ${prompt}`);
    } catch (error) {
        vscode.window.showErrorMessage(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ: ${error.message}`);
    }
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå response ‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö AI
 */
function checkResponseFile(responseFile) {
    try {
        if (fs.existsSync(responseFile)) {
            const content = fs.readFileSync(responseFile, 'utf8');
            if (content.trim()) {
                const responseData = JSON.parse(content);
                handleAIResponse(responseData);
            }
        }
    } catch (error) {
        console.error('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå response:', error);
    }
}

/**
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ response ‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö AI
 */
function handleAIResponse(responseData) {
    const status = responseData.status;
    const message = responseData.message;
    
    switch (status) {
        case 'searching':
            vscode.window.showInformationMessage(`üîç ${message}`);
            break;
        case 'generating':
            vscode.window.showInformationMessage(`üõ†Ô∏è ${message}`);
            break;
        case 'deploying':
            vscode.window.showInformationMessage(`üöÄ ${message}`);
            break;
        case 'completed':
            vscode.window.showInformationMessage(`‚úÖ ${message}`);
            showCompletionNotification(responseData);
            break;
        case 'error':
            vscode.window.showErrorMessage(`‚ùå ${message}`);
            break;
        default:
            if (responseData.actions) {
                showConfirmationDialog(responseData);
            }
    }
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
 */
function showConfirmationDialog(responseData) {
    const panel = vscode.window.createWebviewPanel(
        'advancedCursorAIConfirmation',
        'Advanced Cursor AI - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
        vscode.ViewColumn.One,
        {
            enableScripts: true
        }
    );
    
    panel.webview.html = getConfirmationWebviewContent(responseData);
    
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å webview
    panel.webview.onDidReceiveMessage(
        message => {
            switch (message.command) {
                case 'confirm':
                    vscode.commands.executeCommand('advanced-cursor-ai.confirm');
                    panel.dispose();
                    break;
                case 'edit':
                    vscode.commands.executeCommand('advanced-cursor-ai.edit');
                    panel.dispose();
                    break;
                case 'cancel':
                    vscode.commands.executeCommand('advanced-cursor-ai.cancel');
                    panel.dispose();
                    break;
            }
        }
    );
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
 */
function showCompletionNotification(responseData) {
    const action = vscode.window.showInformationMessage(
        'üéâ ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!',
        '‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ',
        '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà'
    );
    
    action.then(selection => {
        if (selection === '‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ') {
            // ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ
            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];
            if (workspaceFolder) {
                const projectsFolder = path.join(workspaceFolder.uri.fsPath, 'projects');
                vscode.commands.executeCommand('vscode.openFolder', vscode.Uri.file(projectsFolder));
            }
        } else if (selection === '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà') {
            vscode.commands.executeCommand('advanced-cursor-ai.create');
        }
    });
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
 */
function getConfirmationWebviewContent(responseData) {
    return `<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Cursor AI - ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding: 20px;
            background-color: #1e1e1e;
            color: #ffffff;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        .prompt {
            background-color: #2d2d30;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        .code-preview {
            background-color: #1e1e1e;
            border: 1px solid #3e3e42;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            font-family: 'Courier New', monospace;
            font-size: 12px;
            max-height: 300px;
            overflow-y: auto;
        }
        .actions {
            display: flex;
            gap: 10px;
            justify-content: center;
        }
        button {
            padding: 12px 24px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: bold;
        }
        .btn-confirm {
            background-color: #007acc;
            color: white;
        }
        .btn-edit {
            background-color: #f39c12;
            color: white;
        }
        .btn-cancel {
            background-color: #e74c3c;
            color: white;
        }
        button:hover {
            opacity: 0.8;
        }
        .stats {
            text-align: center;
            margin-bottom: 20px;
            color: #cccccc;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ü§ñ Advanced Cursor AI</h1>
            <h2>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</h2>
        </div>
        
        <div class="prompt">
            <h3>üìù ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:</h3>
            <p>${responseData.prompt}</p>
        </div>
        
        <div class="stats">
            <p>üåç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å ${responseData.knowledge_sources} ‡πÅ‡∏´‡∏•‡πà‡∏á</p>
            <p>‚è∞ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${new Date(responseData.timestamp).toLocaleString('th-TH')}</p>
        </div>
        
        <div class="code-preview">
            <h3>üëÄ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:</h3>
            <pre>${JSON.stringify(responseData.script_code, null, 2)}</pre>
        </div>
        
        <div class="actions">
            <button class="btn-confirm" onclick="sendMessage('confirm')">
                ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô & Deploy
            </button>
            <button class="btn-edit" onclick="sendMessage('edit')">
                ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
            </button>
            <button class="btn-cancel" onclick="sendMessage('cancel')">
                üö´ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </button>
        </div>
    </div>
    
    <script>
        const vscode = acquireVsCodeApi();
        
        function sendMessage(command) {
            vscode.postMessage({
                command: command
            });
        }
    </script>
</body>
</html>`;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
 */
function getStatsWebviewContent() {
    return `<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Cursor AI - ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            padding: 20px;
            background-color: #1e1e1e;
            color: #ffffff;
        }
        .container {
            max-width: 1000px;
            margin: 0 auto;
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .stat-card {
            background-color: #2d2d30;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
        }
        .stat-number {
            font-size: 2em;
            font-weight: bold;
            color: #007acc;
        }
        .stat-label {
            margin-top: 10px;
            color: #cccccc;
        }
        .features {
            background-color: #2d2d30;
            padding: 20px;
            border-radius: 8px;
        }
        .feature-list {
            list-style: none;
            padding: 0;
        }
        .feature-list li {
            padding: 8px 0;
            border-bottom: 1px solid #3e3e42;
        }
        .feature-list li:last-child {
            border-bottom: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä Advanced Cursor AI - ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥</h1>
        </div>
        
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number" id="totalSearches">-</div>
                <div class="stat-label">‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="totalProjects">-</div>
                <div class="stat-label">‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="deployedProjects">-</div>
                <div class="stat-label">‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏ó‡∏µ‡πà Deploy</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="successRate">-%</div>
                <div class="stat-label">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>
            </div>
        </div>
        
        <div class="features">
            <h3>üöÄ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö</h3>
            <ul class="feature-list">
                <li>üåç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å 6 ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÇ‡∏•‡∏Å (Wikipedia, Stack Overflow, GitHub, MDN, W3Schools, Tutorials Point)</li>
                <li>üß† ‡∏£‡∏∞‡∏ö‡∏ö Cache ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß</li>
                <li>üõ†Ô∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (Website, API, Automation Script)</li>
                <li>üíæ ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SQLite ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥</li>
                <li>üîÑ ‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</li>
                <li>üöÄ Auto Deploy ‡πÑ‡∏õ GitHub</li>
                <li>üìä ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</li>
                <li>üé® Responsive Design</li>
            </ul>
        </div>
    </div>
    
    <script>
        // ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö (‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)
        document.getElementById('totalSearches').textContent = '0';
        document.getElementById('totalProjects').textContent = '0';
        document.getElementById('deployedProjects').textContent = '0';
        document.getElementById('successRate').textContent = '0';
    </script>
</body>
</html>`;
}

/**
 * ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Extension
 */
function deactivate() {
    console.log('üëã Advanced Cursor AI Extension deactivated');
}

module.exports = {
    activate,
    deactivate
};

