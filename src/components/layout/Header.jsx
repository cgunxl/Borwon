import React, { useState, useEffect } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { Menu, X, Globe, Sun, Moon, ChevronDown } from 'lucide-react';
import { useTheme } from '../../contexts/ThemeContext';
import ThemeToggle from '../ui/ThemeToggle';

const Header = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);
  const { theme, toggleTheme } = useTheme();
  const location = useLocation();

  // Navigation items with categories
  const navigationItems = [
    {
      name: '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î',
      path: '/dashboard',
      icon: 'üìä',
      subItems: [
        { name: '‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°', path: '/dashboard', description: '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°' },
        { name: '‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå', path: '/dashboard?tab=analytics', description: '‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å' },
        { name: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤', path: '/dashboard?tab=content', description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏≠‡∏õ‡πÅ‡∏•‡∏∞‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤' }
      ]
    },
    {
      name: '‡πÅ‡∏≠‡∏õ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠',
      path: '/apps',
      icon: 'üì±',
      subItems: [
        { name: '‡πÅ‡∏≠‡∏õ‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß', path: '/apps/travel-booking', description: 'Agoda, Booking.com, Airbnb' },
        { name: '‡πÅ‡∏≠‡∏õ‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏≤‡∏û', path: '/apps/productivity', description: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ô' },
        { name: '‡πÅ‡∏≠‡∏õ‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡∏¥‡∏á', path: '/apps/entertainment', description: '‡πÄ‡∏Å‡∏° ‡∏´‡∏ô‡∏±‡∏á ‡πÄ‡∏û‡∏•‡∏á' }
      ]
    },
    {
      name: '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á',
      path: '/channels',
      icon: 'üì∫',
      subItems: [
        { name: '‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏£‡∏î', path: '/channels/investment-trading', description: '‡∏´‡∏∏‡πâ‡∏ô ‡∏Ñ‡∏£‡∏¥‡∏õ‡πÇ‡∏ï Forex' },
        { name: '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤', path: '/channels/education', description: '‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå' },
        { name: '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ', path: '/channels/technology', description: '‡∏Ç‡πà‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡πÉ‡∏´‡∏°‡πà' }
      ]
    },
    {
      name: '‡πÄ‡∏û‡∏à‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥',
      path: '/fanpages',
      icon: 'üìò',
      subItems: [
        { name: '‡πÄ‡∏Å‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô', path: '/fanpages/game-topup', description: 'Robux, Free Fire, PUBG' },
        { name: '‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡∏¥‡∏á', path: '/fanpages/entertainment', description: '‡πÄ‡∏û‡∏à‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏ô‡∏±‡∏á ‡πÄ‡∏û‡∏•‡∏á' },
        { name: '‡πÑ‡∏•‡∏ü‡πå‡∏™‡πÑ‡∏ï‡∏•‡πå', path: '/fanpages/lifestyle', description: '‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á' }
      ]
    },
    {
      name: '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
      path: '/products',
      icon: 'üõçÔ∏è',
      subItems: [
        { name: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏¥‡∏ô‡∏ü‡∏•‡∏π‡πÄ‡∏≠‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå', path: '/products/beauty-influencer', description: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏≠‡∏≤‡∏á ‡∏™‡∏Å‡∏¥‡∏ô‡πÅ‡∏Ñ‡∏£‡πå' },
        { name: '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ', path: '/products/tech-gadgets', description: '‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå' },
        { name: '‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', path: '/products/home-living', description: '‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå ‡∏Ç‡∏≠‡∏á‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á' }
      ]
    },
    {
      name: '‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£',
      path: '/news',
      icon: 'üì∞',
      subItems: [
        { name: '‡∏Ñ‡∏£‡∏¥‡∏õ‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ', path: '/news/crypto-tech', description: 'Bitcoin, AI, Blockchain' },
        { name: '‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à', path: '/news/business', description: '‡∏Ç‡πà‡∏≤‡∏ß‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô' },
        { name: '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ', path: '/news/technology', description: '‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÜ' }
      ]
    },
    {
      name: '‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥',
      path: '/advice',
      icon: 'üí°',
      subItems: [
        { name: 'Affiliate Marketing', path: '/advice/affiliate-business', description: '‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥ Affiliate' },
        { name: '‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå', path: '/advice/online-business', description: 'Dropshipping, E-commerce' },
        { name: '‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á', path: '/advice/personal-development', description: '‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ' }
      ]
    },
    {
      name: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà',
      path: '/locations',
      icon: 'üìç',
      subItems: [
        { name: '‡∏à‡∏∏‡∏î‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏•‡∏±‡∏ö', path: '/locations/travel-gems', description: '‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢' },
        { name: '‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô', path: '/locations/local-businesses', description: '‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ OTOP' },
        { name: '‡∏à‡∏∏‡∏î‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏£‡πâ‡∏ô', path: '/locations/hidden-spots', description: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡∏°‡∏µ‡∏Ñ‡∏ô‡∏£‡∏π‡πâ' }
      ]
    },
    {
      name: '‡∏´‡∏≤‡πÄ‡∏á‡∏¥‡∏ô',
      path: '/money',
      icon: 'üí∏',
      subItems: [
        { name: '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏£‡∏¥‡∏°', path: '/money/passive-income', description: 'Crypto Staking, NFT' },
        { name: '‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô', path: '/money/investment-strategies', description: '‡∏ß‡∏¥‡∏ò‡∏µ‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢' },
        { name: '‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°', path: '/money/side-hustles', description: '‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏î‡∏µ' }
      ]
    }
  ];

  // Handle scroll effect
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Close mobile menu when route changes
  useEffect(() => {
    setIsMenuOpen(false);
  }, [location.pathname]);

  // Check if current path is active
  const isActivePath = (path) => {
    if (path === '/') {
      return location.pathname === '/';
    }
    return location.pathname.startsWith(path);
  };

  return (
    <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
      isScrolled 
        ? 'bg-bwn-deep-black/95 backdrop-blur-md border-b border-bwn-accent/20' 
        : 'bg-transparent'
    }`}>
      <div className="bwn-container">
        <div className="flex items-center justify-between h-16 lg:h-20">
          {/* Logo */}
          <Link to="/" className="flex items-center space-x-3 group">
            <div className="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-bwn-accent to-bwn-ocean-blue rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
              <span className="text-xl lg:text-2xl font-bold text-bwn-deep-black">BX</span>
            </div>
            <div className="hidden sm:block">
              <h1 className="text-xl lg:text-2xl font-bold text-bwn-white group-hover:text-bwn-accent transition-colors duration-300">
                Bwn X
              </h1>
              <p className="text-xs text-bwn-accent font-medium">‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏©‡∏≤</p>
            </div>
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden lg:flex items-center space-x-1">
            {navigationItems.map((item) => (
              <div key={item.path} className="relative group">
                <Link
                  to={item.path}
                  className={`flex items-center space-x-1 px-4 py-2 rounded-xl font-medium transition-all duration-300 ${
                    isActivePath(item.path)
                      ? 'text-bwn-accent bg-bwn-accent/10 border border-bwn-accent/20'
                      : 'text-bwn-white hover:text-bwn-accent hover:bg-bwn-accent/5'
                  }`}
                >
                  <span className="text-lg">{item.icon}</span>
                  <span>{item.name}</span>
                  <ChevronDown className="w-4 h-4 transition-transform duration-300 group-hover:rotate-180" />
                </Link>

                {/* Dropdown Menu */}
                <div className="absolute top-full left-0 mt-2 w-80 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
                  <div className="bg-bwn-dark-gray border border-bwn-medium-gray rounded-2xl p-4 shadow-2xl">
                    <div className="grid gap-3">
                      {item.subItems.map((subItem) => (
                        <Link
                          key={subItem.path}
                          to={subItem.path}
                          className="flex items-start space-x-3 p-3 rounded-xl hover:bg-bwn-medium-gray transition-colors duration-200"
                        >
                          <div className="flex-1">
                            <h4 className="font-medium text-bwn-white hover:text-bwn-accent transition-colors duration-200">
                              {subItem.name}
                            </h4>
                            <p className="text-sm text-bwn-white/60 mt-1">
                              {subItem.description}
                            </p>
                          </div>
                        </Link>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </nav>

          {/* Right Side - Theme Toggle & Mobile Menu */}
          <div className="flex items-center space-x-4">
            {/* Theme Toggle */}
            <ThemeToggle />

            {/* Language Toggle */}
            <button className="hidden sm:flex items-center space-x-2 text-bwn-white hover:text-bwn-accent transition-colors duration-200">
              <Globe className="w-5 h-5" />
              <span className="text-sm font-medium">TH</span>
            </button>

            {/* Mobile Menu Button */}
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="lg:hidden p-2 text-bwn-white hover:text-bwn-accent hover:bg-bwn-accent/10 rounded-xl transition-all duration-200"
            >
              {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {isMenuOpen && (
          <div className="lg:hidden border-t border-bwn-medium-gray bg-bwn-dark-gray/95 backdrop-blur-md">
            <div className="py-4 space-y-2">
              {navigationItems.map((item) => (
                <div key={item.path} className="space-y-2">
                  <Link
                    to={item.path}
                    className={`flex items-center space-x-3 px-4 py-3 rounded-xl font-medium transition-all duration-200 ${
                      isActivePath(item.path)
                        ? 'text-bwn-accent bg-bwn-accent/10 border border-bwn-accent/20'
                        : 'text-bwn-white hover:text-bwn-accent hover:bg-bwn-accent/5'
                    }`}
                  >
                    <span className="text-xl">{item.icon}</span>
                    <span>{item.name}</span>
                  </Link>
                  
                  {/* Mobile Sub Items */}
                  <div className="ml-8 space-y-1">
                    {item.subItems.map((subItem) => (
                      <Link
                        key={subItem.path}
                        to={subItem.path}
                        className="block px-4 py-2 text-sm text-bwn-white/80 hover:text-bwn-accent hover:bg-bwn-accent/5 rounded-lg transition-all duration-200"
                      >
                        {subItem.name}
                      </Link>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;

